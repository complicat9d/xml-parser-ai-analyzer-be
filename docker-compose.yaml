version: "3"
services:

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: python3 api/main.py
    restart: always
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - app-network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_tasks.conf worker --loglevel=info
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - app-network

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_tasks.conf beat --loglevel=info
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - app-network

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_tasks.conf flower --log_level=info
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
    ports:
      - "5555:5555"
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    command:
      - "postgres"
      - "-c"
      - "max_connections=1000"
    ports:
      - "5432:5432"
    networks:
      - app-network

  alembic:
    build:
      context: .
      dockerfile: Dockerfile
    command: alembic upgrade head
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    command: redis-server --maxclients 10000
    ports:
      - "6379:6379"
    networks:
      - app-network


networks:
  app-network:
    driver: bridge